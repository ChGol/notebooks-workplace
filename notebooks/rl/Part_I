{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"[SOLVED] Crash Course in Reinforcement Learning - Part I","provenance":[],"collapsed_sections":["Gw3P1oFTOlnF"]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"Gw3P1oFTOlnF","colab_type":"text"},"source":["# Setup\n","Run below cells and hide it afterwards with the arrow on the left. "]},{"cell_type":"code","metadata":{"id":"S-4YPGE9O9mH","colab_type":"code","colab":{}},"source":["!pip install gym[Box2D] pyvirtualdisplay pyglet > /dev/null 2>&1\n","!apt-get install -y xvfb python-opengl ffmpeg > /dev/null 2>&1"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"0fc7b4a0-cf59-4d79-dfa6-46b8c8c1ff0e","executionInfo":{"status":"ok","timestamp":1574669586978,"user_tz":-60,"elapsed":5645,"user":{"displayName":"Igor Sieradzki","photoUrl":"","userId":"10906567088243523558"}},"id":"_jMNwYlIHTep","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["import gym\n","from gym import logger as gymlogger\n","from gym.wrappers import Monitor\n","gymlogger.set_level(40) #error only\n","import numpy as np\n","import random\n","import matplotlib\n","import matplotlib.pyplot as plt\n","plt.rcParams['figure.figsize'] = (10.0, 8.0)\n","import math\n","import glob\n","import io\n","import base64\n","from IPython.display import HTML\n","\n","from typing import List, Tuple\n","\n","import torch\n","from torch import nn\n","import torch.nn.functional as F\n","from collections import deque\n","\n","from IPython import display as ipythondisplay\n","from IPython.display import display, update_display, clear_output\n","from time import sleep\n","\n","from pyvirtualdisplay import Display\n","xdisplay = Display(visible=0, size=(1300, 900), backend=\"xvfb\")\n","xdisplay.start()\n","\n","\n","\"\"\"\n","Utility functions to enable video recording of gym environment and displaying it\n","To enable video, just do \"env = wrap_env(env)\"\"\n","\"\"\"\n","\n","class DoneWrapper(gym.Wrapper):\n","\n","  def step(self, action):\n","    observation, reward, done, info = self.env.step(action) \n","    return observation, reward, False, info\n","      \n","\n","def show_video():\n","  mp4list = glob.glob('video/*.mp4')\n","  if len(mp4list) > 0:\n","    mp4 = mp4list[0]\n","    video = io.open(mp4, 'r+b').read()\n","    encoded = base64.b64encode(video)\n","    ipythondisplay.display(HTML(data='''<video alt=\"test\" autoplay \n","                loop controls style=\"height: 400px;\">\n","                <source src=\"data:video/mp4;base64,{0}\" type=\"video/mp4\" />\n","             </video>'''.format(encoded.decode('ascii'))))\n","  else: \n","    print(\"Could not find video\")\n","    \n","    \n","def wrap_env(env, done=True):\n","  if not done:\n","    env = DoneWrapper(env)\n","  env = Monitor(env, './video', force=True, mode='evaluation')\n","  return env\n","\n","\n","def print_ansi(screen, display_id='42', wait=0.5):\n","    clear_output(wait=True)\n","    update_display(print(screen.getvalue()), display_id=display_id)\n","    sleep(wait)\n","\n","\n","def plot(img):\n","  fig = plt.figure(figsize=(8,6))\n","  ax = fig.add_subplot(111)\n","  ax.imshow(img)\n","  ax.set_xticks([])\n","  ax.set_yticks([])"],"execution_count":2,"outputs":[{"output_type":"stream","text":["xdpyinfo was not found, X start can not be checked! Please install xdpyinfo!\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"k1U1clC6HTeu"},"source":["# Part 1. The Agent and The Environment\n","Here we are going to familiarize ourselves with basic Reinforcement Learning concepts: environments and agent. \n","\n","Through the whole workshop we will be using the `gym` package for our environment, here's an example of a classic control task."]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"04646fdf-5f11-4b1b-aafa-0ef0c01b5d39","executionInfo":{"status":"ok","timestamp":1574669603916,"user_tz":-60,"elapsed":1948,"user":{"displayName":"Igor Sieradzki","photoUrl":"","userId":"10906567088243523558"}},"id":"g0mcOMT_HTew","colab":{"base_uri":"https://localhost:8080/","height":332}},"source":["import gym\n","\n","# create the environemnt\n","env = gym.make(\"CartPole-v1\")\n","# reset the env and initilize it\n","env.reset()\n","# plot the visualisation\n","plot(env.render(mode='rgb_array'))"],"execution_count":3,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAdAAAAE7CAYAAABt3tBBAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjEsIGh0\ndHA6Ly9tYXRwbG90bGliLm9yZy8QZhcZAAAFoElEQVR4nO3cwWkbQRiA0d3gEpxDTlEPUhmpw67J\nqiNlyD04pxziHiYHQwiJBNKHZa3s98AgNIP4b593GWYeY0wAwGk+XXoAALhGAgoAgYACQCCgABAI\nKAAEAgoAwc0pm29vb8dqtTrTKACwLE9PT9Pz8/O8b+2kgK5Wq2m3273OVACwcJvN5uCaV7gAEAgo\nAAQCCgCBgAJAIKAAEAgoAAQCCgCBgAJAIKAAEAgoAAQCCgCBgAJAIKAAEAgoAAQCCgCBgAJAIKAA\nEAgoAAQCCgCBgAJAIKAAEAgoAAQCCgCBgAJAIKAAEAgoAAQCCgCBgAJAIKAAEAgoAAQCCgCBgAJA\nIKAAEAgoAAQCCgCBgAJAIKAAEAgoAAQCCgCBgAJAIKAAEAgoAAQCCgCBgAJAIKAAEAgoAAQCCgCB\ngAJAIKAAEAgoAAQCCgCBgAJAIKAAEAgoAAQCCgCBgAJAIKAAEAgoAAQCCgCBgAJAIKAAEAgoAAQC\nCgCBgAJAIKAAEAgoAAQCCgCBgAJAIKAAEAgoAAQCCgCBgAJAIKAAEAgoAAQCCgCBgAJAIKAAEAgo\nAAQCCgCBgAJAIKAAEAgoAAQCCgCBgAJAIKAAEAgoAAQCCgCBgAJAIKAAEAgoAAQCCgCBgAJAIKAA\nEAgoAAQCCgCBgAJAIKAAEAgoAAQCCgCBgAJAIKAAEAgoAAQCCgCBgAJAIKAAEAgoAAQCCgCBgAJA\nIKAAEAgoAAQCCgCBgAJAIKAAEAgoAAQCCgCBgAJAIKAAEAgoAAQCCgCBgAJAIKAAEAgoAAQCCgCB\ngAJAIKAAENxcegDgsMft/Z/P67uHC04C/EtA4Ur8HdNpElS4NK9wASAQUAAIBBQAAgEFgEBAASAQ\nUAAIBBQAAgEFgEBAASAQUAAIBBQAAgEFgEBAASAQUAAIBBQAAgEFgEBAASAQUAAIBBQAAgEFgEBA\nASAQUAAIBBQAAgEFgEBAASAQUAAIBBQAAgEFgEBAASAQUAAIBBQAAgEFgEBAASAQUAAIBBQAAgEF\ngEBAASAQUAAIBBQAAgEFgEBAASAQUAAIBBQAAgEFgEBAASAQUAAIBBQAAgEFgEBAASAQUAAIBBQA\nAgEFgEBAASAQUAAIBBQAAgEFgEBAASAQUAAIBBQAAgEFgEBAASAQUAAIBBQAAgEFgEBAASAQUAAI\nBBQAAgEFgEBAASAQUAAIBBQAAgEFgEBAASAQUAAIBBQAAgEFgEBAASAQUAAIBBQAAgGFhXrc3h9c\nW989vOEkwD4CCgCBgAJAIKBwRvM8579L/C5wPAEFgEBAASC4ufQAwGHff9799923L9sLTAL8yxMo\nXJl9UQXenoACQCCgABAIKAAEAgpXxiEiWAancGGhNvfbaZpeYrl7cHAIlkZA4Qq8xBRYknmMcfzm\neT5+MwC8A2OMvXdgnvQEul6vp91u9zoTwQewxLtnT/mnGT66zWZzcM0hIgAIBBQAAgEFgEBAASAQ\nUAAIBBQAAgEFgEBAASAQUAAIBBQAApfJwxm5Ng/eL0+gABAIKAAEAgoAgYACQCCgABAIKAAEAgoA\ngYACQCCgABAIKAAEAgoAgYACQCCgABAIKAAEAgoAgYACQCCgABAIKAAEAgoAgYACQCCgABAIKAAE\nAgoAgYACQCCgABAIKAAEAgoAgYACQCCgABAIKAAEAgoAgYACQCCgABAIKAAEAgoAgYACQCCgABAI\nKAAEAgoAgYACQCCgABAIKAAEAgoAgYACQCCgABAIKAAEAgoAgYACQCCgABAIKAAEAgoAgYACQCCg\nABAIKAAEAgoAgYACQCCgABAIKAAEAgoAgYACQCCgABAIKAAE8xjj+M3z/Guaph/nGwcAFuXrGOPz\nvoWTAgoAvPAKFwACAQWAQEABIBBQAAgEFAACAQWAQEABIBBQAAgEFACC34ouP5htog4oAAAAAElF\nTkSuQmCC\n","text/plain":["<Figure size 576x432 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"ae73e70c-24df-4950-e0d4-0a57f1735a51","executionInfo":{"status":"ok","timestamp":1574669625108,"user_tz":-60,"elapsed":953,"user":{"displayName":"Igor Sieradzki","photoUrl":"","userId":"10906567088243523558"}},"id":"hPOABUyaHTez","colab":{"base_uri":"https://localhost:8080/","height":68}},"source":["# state/observation space\n","print(env.observation_space)\n","print(\"max:\", env.observation_space.high)\n","print(\"min:\", env.observation_space.low)"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Box(4,)\n","max: [4.8000002e+00 3.4028235e+38 4.1887903e-01 3.4028235e+38]\n","min: [-4.8000002e+00 -3.4028235e+38 -4.1887903e-01 -3.4028235e+38]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"UP9Iv5EARquC","colab_type":"text"},"source":["**Question:** Can you guess what are those four numbers?"]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"61f1f235-57b2-43b0-bad1-a2f2f3288c71","executionInfo":{"status":"ok","timestamp":1574425705465,"user_tz":-60,"elapsed":7980,"user":{"displayName":"Maciej Wo≈Çczyk","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mDRvtTbpF1Xk8VA7v_ZmpKuSTv_gP3uBvdiPfNy=s64","userId":"03061857490200756616"}},"id":"VX-JjUrGHTe2","colab":{"base_uri":"https://localhost:8080/","height":53}},"source":["# action space\n","print(env.action_space)\n","print(\"random action:\", env.action_space.sample())"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Discrete(2)\n","random action: 1\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"PsOEU1pFHTe7"},"source":["**Question:** Again, can you guess what are those to actions?\n","\n","Let's see how do we (or specifically the agent) can interact with the environment."]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"ddc824d2-9856-416e-a60c-3abd856bc7c8","executionInfo":{"status":"ok","timestamp":1574428928443,"user_tz":-60,"elapsed":5496,"user":{"displayName":"Igor Sieradzki","photoUrl":"","userId":"10906567088243523558"}},"id":"IA96qLRAHTe9","colab":{"base_uri":"https://localhost:8080/","height":421}},"source":["# set the limit on steps taken\n","max_steps = 200\n","\n","# create the environment again\n","env = wrap_env(gym.make(\"CartPole-v1\"), done=False)\n","# reset it\n","env.reset()\n","# plot\n","env.render()\n","\n","# interact with the environemnt \n","for i in range(max_steps):\n","  \n","    # sample a random action\n","    action = env.action_space.sample()\n","\n","    # act with the sampled action\n","    observation, reward, done, info = env.step(action) \n","\n","    # plot\n","    env.render()\n","  \n","# close the env\n","env.close()\n","# visualise the interaction\n","show_video()"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"text/html":["<video alt=\"test\" autoplay \n","                loop controls style=\"height: 400px;\">\n","                <source src=\"data:video/mp4;base64,\" type=\"video/mp4\" />\n","             </video>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"ChCKYSc1HTfC"},"source":["**Mini-exercise:** Change random action to a constant one."]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"DeDQHLV7HTfD"},"source":["## Exercise: Manual control on a more complicated environment.\n","\n","Try to \"manually\" solve the moon lander problem\n","\n","State space representation:\n","```\n","[x position,   \n"," y position,\n"," x velocity,\n"," y velocity,\n"," lander angle,\n"," angular velocity,\n"," ??,\n"," ??]\n","``` \n","\n","Action space representation:\n","```\n","[no operation\n","left engine,\n","main (bottom) engine,\n","right engine]\n","```"]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"685fb55e-a923-4652-adde-080f3f87ce4c","executionInfo":{"status":"ok","timestamp":1574425709148,"user_tz":-60,"elapsed":11625,"user":{"displayName":"Maciej Wo≈Çczyk","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mDRvtTbpF1Xk8VA7v_ZmpKuSTv_gP3uBvdiPfNy=s64","userId":"03061857490200756616"}},"id":"3E2GXEAsHTfE","colab":{"base_uri":"https://localhost:8080/","height":420}},"source":["# create the environment (again)\n","env = wrap_env(gym.make(\"LunarLander-v2\"))\n","# reset\n","observation = env.reset()\n","# plot\n","env.render()\n","\n","# interact with the environemnt \n","while True:\n","\n","    # change the constant action here to some heuristic \n","    # base on the state\n","    action: int = 2\n","\n","    # act with the choosen action\n","    observation, reward, done, info = env.step(action) \n","\n","    # plotting\n","    env.render()\n","\n","    # break the loop on game end\n","    if done:\n","        break\n","  \n","env.close()\n","show_video()"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"text/html":["<video alt=\"test\" autoplay \n","                loop controls style=\"height: 400px;\">\n","                <source src=\"data:video/mp4;base64,\" type=\"video/mp4\" />\n","             </video>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"tUKt2EUEHTfH"},"source":["## Exercise: Build a class for your Moon Lander policy.\n","\n","We would like to have some abstraction for our Policies, move your solution to the class skeleton below. "]},{"cell_type":"code","metadata":{"colab_type":"code","id":"Lvl8DVlCHTfI","colab":{}},"source":["class ManualPolicy:\n","\n","  def sample(self, obs: np.ndarray):\n","      \"\"\"Pick an action based on the current state\"\"\"\n","\n","      # move your code here\n","      action = 2\n","      \n","      return action"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"7hFzepUhHTfM"},"source":["Use your new policy class in the function below.\n"]},{"cell_type":"code","metadata":{"colab_type":"code","id":"ZkFC2btxHTfN","colab":{}},"source":["def visualize(env, policy):\n","    \"\"\"Run the provided policy on the environment\"\"\"\n","\n","    env = wrap_env(env)\n","    obs = env.reset()\n","    done = False\n","    \n","    while not done:\n","        action = policy.sample(obs) # ???\n","        obs, reward, done, _ = env.step(action)\n","        env.render()\n","\n","    env.close()\n","    show_video()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"292d72a9-c0b3-4616-9f04-f1a17723d687","executionInfo":{"status":"ok","timestamp":1574425710830,"user_tz":-60,"elapsed":13260,"user":{"displayName":"Maciej Wo≈Çczyk","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mDRvtTbpF1Xk8VA7v_ZmpKuSTv_gP3uBvdiPfNy=s64","userId":"03061857490200756616"}},"id":"hTBs0mm8HTfP","colab":{"base_uri":"https://localhost:8080/","height":420}},"source":["# moon lander\n","env = gym.make(\"LunarLander-v2\")\n","# your policy\n","policy = ManualPolicy()\n","\n","visualize(env, policy)"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"text/html":["<video alt=\"test\" autoplay \n","                loop controls style=\"height: 400px;\">\n","                <source src=\"data:video/mp4;base64,AAAAIGZ0eXBpc29tAAACAGlzb21pc28yYXZjMW1wNDEAAAAIZnJlZQAAJJFtZGF0AAACrgYF//+q3EXpvebZSLeWLNgg2SPu73gyNjQgLSBjb3JlIDE1MiByMjg1NCBlOWE1OTAzIC0gSC4yNjQvTVBFRy00IEFWQyBjb2RlYyAtIENvcHlsZWZ0IDIwMDMtMjAxNyAtIGh0dHA6Ly93d3cudmlkZW9sYW4ub3JnL3gyNjQuaHRtbCAtIG9wdGlvbnM6IGNhYmFjPTEgcmVmPTMgZGVibG9jaz0xOjA6MCBhbmFseXNlPTB4MzoweDExMyBtZT1oZXggc3VibWU9NyBwc3k9MSBwc3lfcmQ9MS4wMDowLjAwIG1peGVkX3JlZj0xIG1lX3JhbmdlPTE2IGNocm9tYV9tZT0xIHRyZWxsaXM9MSA4eDhkY3Q9MSBjcW09MCBkZWFkem9uZT0yMSwxMSBmYXN0X3Bza2lwPTEgY2hyb21hX3FwX29mZnNldD0tMiB0aHJlYWRzPTMgbG9va2FoZWFkX3RocmVhZHM9MSBzbGljZWRfdGhyZWFkcz0wIG5yPTAgZGVjaW1hdGU9MSBpbnRlcmxhY2VkPTAgYmx1cmF5X2NvbXBhdD0wIGNvbnN0cmFpbmVkX2ludHJhPTAgYmZyYW1lcz0zIGJfcHlyYW1pZD0yIGJfYWRhcHQ9MSBiX2JpYXM9MCBkaXJlY3Q9MSB3ZWlnaHRiPTEgb3Blbl9nb3A9MCB3ZWlnaHRwPTIga2V5aW50PTI1MCBrZXlpbnRfbWluPTI1IHNjZW5lY3V0PTQwIGludHJhX3JlZnJlc2g9MCByY19sb29rYWhlYWQ9NDAgcmM9Y3JmIG1idHJlZT0xIGNyZj0yMy4wIHFjb21wPTAuNjAgcXBtaW49MCBxcG1heD02OSBxcHN0ZXA9NCBpcF9yYXRpbz0xLjQwIGFxPTE6MS4wMACAAAAHemWIhAAz//727L4FNhTIUJcRLMXaSnA+KqSAgHc02r9uxdlj+AG/7TkRnXJ9TlSif+AklRLR/iteGHoI+W9LbGHIHwex2rXQ62rHT9VeAKj9Sw6lQe6hRx1rrzXvWvode97093atoUD1dyJbRHPQ1P5rz4mr5aN0TgSV/hwt02Z9iSxjp3vA+eG3HRvnVztZPJ0fmX2OILKKJxUgL3Ku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AAAAAAAAAAAAGP//AAAAMmF2Y0MBZAAf/+EAGWdkAB+s2UCYM+XhAAADAAEAAAMAZA8YMZYBAAZo6+PLIsAAAAAYc3R0cwAAAAAAAAABAAAAgwAAAQAAAAAUc3RzcwAAAAAAAAABAAAAAQAABChjdHRzAAAAAAAAAIMAAAABAAACAAAAAAEAAAUAAAAAAQAAAgAAAAABAAAAAAAAAAEAAAEAAAAAAQAABQAAAAABAAACAAAAAAEAAAAAAAAAAQAAAQAAAAABAAAFAAAAAAEAAAIAAAAAAQAAAAAAAAABAAABAAAAAAEAAAUAAAAAAQAAAgAAAAABAAAAAAAAAAEAAAEAAAAAAQAABQAAAAABAAACAAAAAAEAAAAAAAAAAQAAAQAAAAABAAAFAAAAAAEAAAIAAAAAAQAAAAAAAAABAAABAAAAAAEAAAUAAAAAAQAAAgAAAAABAAAAAAAAAAEAAAEAAAAAAQAABQAAAAABAAACAAAAAAEAAAAAAAAAAQAAAQAAAAABAAAFAAAAAAEAAAIAAAAAAQAAAAAAAAABAAABAAAAAAEAAAUAAAAAAQAAAgAAAAABAAAAAAAAAAEAAAEAAAAAAQAABQAAAAABAAACAAAAAAEAAAAAAAAAAQAAAQAAAAABAAAFAAAAAAEAAAIAAAAAAQAAAAAAAAABAAABAAAAAAEAAAUAAAAAAQAAAgAAAAABAAAAAAAAAAEAAAEAAAAAAQAABQAAAAABAAACAAAAAAEAAAAAAAAAAQAAAQAAAAABAAAFAAAAAAEAAAIAAAAAAQAAAAAAAAABAAABAAAAAAEAAAUAAAAAAQAAAgAAAAABAAAAAAAAAAEAAAEAAAAAAQAABQAAAAABAAACAAAAAAEAAAAAAAAAAQAAAQAAAAABAAAFAAAAAAEAAAIAAAAAAQAAAAAAAAABAAABAAAAAAEAAAUAAAAAAQAAAgAAAAABAAAAAAAAAAEAAAEAAAAAAQAABQAAAAABAAACAAAAAAEAAAAAAAAAAQAAAQAAAAABAAAFAAAAAAEAAAIAAAAAAQAAAAAAAAABAAABAAAAAAEAAAUAAAAAAQAAAgAAAAABAAAAAAAAAAEAAAEAAAAAAQAABQAAAAABAAACAAAAAAEAAAAAAAAAAQAAAQAAAAABAAAFAAAAAAEAAAIAAAAAAQAAAAAAAAABAAABAAAAAAEAAAUAAAAAAQAAAgAAAAABAAAAAAAAAAEAAAEAAAAAAQAABQAAAAABAAACAAAAAAEAAAAAAAAAAQAAAQAAAAABAAAFAAAAAAEAAAIAAAAAAQAAAAAAAAABAAABAAAAAAEAAAUAAAAAAQAAAgAAAAABAAAAAAAAAAEAAAEAAAAAAQAABQAAAAABAAACAAAAAAEAAAAAAAAAAQAAAQAAAAABAAAFAAAAAAEAAAIAAAAAAQAAAAAAAAABAAABAAAAAAEAAAUAAAAAAQAAAgAAAAABAAAAAAAAAAEAAAEAAAAAAQAABQAAAAABAAACAAAAAAEAAAAAAAAAAQAAAQAAAAABAAADAAAAAAEAAAEAAAAAHHN0c2MAAAAAAAAAAQAAAAEAAACDAAAAAQAAAiBzdHN6AAAAAAAAAAAAAACDAAAKMAAAAZMAAACEAAAAgQAAAIgAAADpAAAAlwAAAIEAAACWAAAAyQAAAJwAAACXAAAAgAAAAH8AAAB2AAAAdwAAAHAAAACWAAAAgQAAAG8AAABKAAAAcQAAAH4AAAB1AAAAVwAAAGUAAABdAAAAQwAAAFMAAABtAAAAQgAAADwAAABOAAAASQAAAEQAAABFAAAAOAAAACIAAAAcAAAAGAAAABYAAAA4AAAAJwAAACwAAAAXAAAAHgAAACoAAAAZAAAAFwAAABsAAAAZAAAAFgAAABYAAAAbAAAAGAAAABYAAAAWAAAAGwAAABgAAAAWAAAAFgAAABsAAAAYAAAAFgAAABYAAAAbAAAAGAAAABYAAAAWAAAAGwAAABgAAAAWAAAAFgAAABsAAAAYAAAAFgAAABYAAAAbAAAAGAAAABYAAAAWAAAAGwAAABgAAAAWAAAAFgAAABsAAAAYAAAAFgAAABYAAAAbAAAAGAAAABYAAAAWAAAAGwAAABgAAAAWAAAAFgAAABsAAAAYAAAAFgAAABYAAAAbAAAAGAAAABYAAAAWAAAAGwAAABgAAAAWAAAAFgAAABsAAAAYAAAAFgAAABYAAAAbAAAAGAAAABYAAAAWAAAAGwAAABgAAAAWAAAAFgAAABsAAAAYAAAAFgAAABYAAAAbAAAAGAAAABYAAAAWAAAAGwAAABYAAAAUc3RjbwAAAAAAAAABAAAAMAAAAGJ1ZHRhAAAAWm1ldGEAAAAAAAAAIWhkbHIAAAAAAAAAAG1kaXJhcHBsAAAAAAAAAAAAAAAALWlsc3QAAAAlqXRvbwAAAB1kYXRhAAAAAQAAAABMYXZmNTcuODMuMTAw\" type=\"video/mp4\" />\n","             </video>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"sQWzWkSkHTfS"},"source":["## Exercise: Random Policy\n","We would like to compare our policy to a *random* agent, let's implement another policy class, this time a more generic one that can work for various environments.\n","\n","Implement the `RandomPolicy` class using methods from the PyTorch package.\n","\n","**Hint:** For random sampling you can use [`torch.multinomial`](https://pytorch.org/docs/stable/torch.html#torch.multinomial) function."]},{"cell_type":"code","metadata":{"colab_type":"code","id":"si7rfe_YHTfT","colab":{}},"source":["import torch\n","\n","class RandomPolicy:\n","    \"\"\"Policy that takes uniformly random actions\"\"\"\n","\n","    def __init__(self, action_dim: int):\n","        # save action dimensionality\n","        self.action_dim = action_dim\n","\n","    def probs(self):\n","        # create a tensor with uniform probability for each action\n","        # make sure that the returned type is torch.float\n","\n","        # ???\n","        probs = [1 / self.action_dim] * self.action_dim\n","        return torch.tensor(probs, dtype=torch.float32)\n","\n","    def sample(self, obs: np.ndarray):\n","        # sample from the prepared probability vector\n","        # * here you can disregard the `obs` parameterm as our random action is \n","        #   independent of the observation\n","        # * because the suggested sampling method returns a tensor, you may need\n","        #   to use the `.item()` method on the returned tensor to get an int  \n","\n","        # ???\n","        probs = self.probs()\n","        action = torch.multinomial(probs, num_samples=1).item()\n","        return action\n"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"FZ6V68lHHTfW"},"source":["Test the Random Policy."]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"348e7969-965a-42c2-cd7c-c71423991077","executionInfo":{"status":"ok","timestamp":1574425712652,"user_tz":-60,"elapsed":15053,"user":{"displayName":"Maciej Wo≈Çczyk","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mDRvtTbpF1Xk8VA7v_ZmpKuSTv_gP3uBvdiPfNy=s64","userId":"03061857490200756616"}},"id":"ktTRga5aHTfX","colab":{"base_uri":"https://localhost:8080/","height":420}},"source":["# moon lander\n","env = gym.make(\"LunarLander-v2\")\n","# your policy\n","policy = RandomPolicy(action_dim=env.action_space.n)\n","\n","visualize(env, policy)"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"text/html":["<video alt=\"test\" autoplay \n","                loop controls style=\"height: 400px;\">\n","                <source src=\"data:video/mp4;base64,\" type=\"video/mp4\" />\n","             </video>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"dsWfOz4_HTfa"},"source":["## Exercise: Gathering Trajectories\n","To compare your Policy to a Random one we need to many *episodes* to get a better picture of how they perform. Here we will gather many trajectories to later compare the performance of the models.\n","\n","\n","Implement the missing code in the function below to gather trajectories, a single element of a trajectory should be a tuple consisting of:\n","`[state, action_taken, reward, done_flag]`"]},{"cell_type":"code","metadata":{"colab_type":"code","id":"9qTfnx_VHTfc","colab":{}},"source":["def gather_trajectories(env: gym.Env, policy, num_trajs: int = 10):\n","    \"\"\"Gather `num_trajs` trajectories by interacting with the environment using the given policy.\"\"\"\n","    \n","    # prepare a list for the trajectories\n","    history = []\n","    \n","    for traj_idx in range(num_trajs):\n","        obs = env.reset()\n","        done = False\n","        current_traj = []\n","        while not done:\n","            \n","            # sample an action from the policy\n","            action = policy.sample(obs) # ???\n","            # feed it into the environment\n","            next_obs, reward, done, _ = env.step(action) # ???\n","            \n","            # save into the history\n","            current_traj += [(obs, action, reward)] # ???\n","\n","            obs = next_obs\n","        history += [current_traj]\n","        \n","    return history"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","id":"aC2cg6YjHTfe","colab":{}},"source":["env = gym.make(\"LunarLander-v2\")\n","\n","manual_policy = ManualPolicy()\n","random_policy = RandomPolicy(action_dim=env.action_space.n)\n","\n","# this may take a few seconds\n","manual_history = gather_trajectories(env, manual_policy)\n","random_history = gather_trajectories(env, random_policy)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"0w43UBcoHTfh"},"source":["## Exercise: Processing Trajectories\n","\n","Now that we have the episode records we can process the trajectories to get some statistics, but we need one more thing. We will compare our policies on the sum of rewards and the end of each episode, called *return*. Later we will need a return for each step of the interaction, so let's implement it right now. As a remainder, a step return is defined as:\n","\n","$$ R_t = \\sum_{j=t}^{T} r_j$$\n","\n","and the episode return with the episode trajectory $\\tau$ is simply:\n","\n","$$ R(\\tau) =  \\sum_{j=1}^{T} r_j $$"]},{"cell_type":"code","metadata":{"colab_type":"code","id":"ewF-7AdyHTfi","colab":{}},"source":["def calculate_return(rewards: List[float]) -> Tuple[float, List[float]]:\n","    \"\"\"Calulate episode and step returns\"\"\"\n","    # calculate the sum of rewards from the episode\n","    rewards = np.array(rewards)\n","    episode_return = np.sum(rewards)\n","    \n","    # prepare a list for the step returns\n","    step_returns = []\n","\n","    # calculate discounted return for each step\n","    # hint: it's easier to go backwards\n","    step_returns = [rewards[-1]]\n","    for reward in reversed(rewards[:-1]):\n","        last_return = step_returns[-1]\n","        step_returns += [reward + last_return]\n","    \n","    step_returns.reverse()\n","\n","    return episode_return, step_returns"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"Y4umKZrZHTfl"},"source":["With that function ready we can use it to process our history. Implement the `process_trajectories` function, don't forget to use the `calculate_return` function that you've just implemented."]},{"cell_type":"code","metadata":{"colab_type":"code","id":"Zwm1U_a2HTfo","colab":{}},"source":["def process_trajectories(history: List):\n","    \"\"\"Process gathered trajectories into tensors and calculate returns\"\"\"\n","    # prepare containers for each element\n","    obs_array = []\n","    action_array = []\n","    return_array = []\n","    episode_returns = []\n","    \n","    # loop over the whole history\n","    rewards = []\n","    for traj_idx, traj in enumerate(history):\n","        # unpack the elements\n","        traj_obs, traj_actions, traj_rewards = list(zip(*traj))\n","\n","        # process the episode - calculate episode and step returns\n","        # ???\n","        episode_return, step_returns = calculate_return(traj_rewards)\n","        \n","        episode_returns += [episode_return]\n","        obs_array += traj_obs\n","        action_array += traj_actions\n","        return_array += step_returns\n","\n","    # cast out data to tensors (will be useful later)     \n","    obs_array = torch.tensor(obs_array, dtype=torch.float32)\n","    action_array = torch.tensor(action_array, dtype=torch.float32)\n","    return_array = torch.tensor(return_array, dtype=torch.float32)\n","    episode_returns = torch.tensor(episode_returns, dtype=torch.float32)\n","    \n","    return obs_array, action_array, return_array, episode_returns"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"QNB4QJeqHTft"},"source":["With all that we can compare your policy to the random one, will plot here the returns for each consecutive episode."]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"465f5aa8-5893-416a-ca29-ba8efd41d413","executionInfo":{"status":"ok","timestamp":1574425713110,"user_tz":-60,"elapsed":15441,"user":{"displayName":"Maciej Wo≈Çczyk","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mDRvtTbpF1Xk8VA7v_ZmpKuSTv_gP3uBvdiPfNy=s64","userId":"03061857490200756616"}},"id":"9qBFVtZZHTfu","colab":{"base_uri":"https://localhost:8080/","height":519}},"source":["manual_stats = process_trajectories(manual_history)\n","random_stats = process_trajectories(random_history)\n","\n","manual_returns = manual_stats[-1]\n","random_returns = random_stats[-1]\n","\n","plt.boxplot([manual_returns.numpy(), random_returns.numpy()], labels=['manual', 'random'], sym=\"\")\n","\n","print(f\"Average manual policy episode return: {manual_returns.mean():.3f}\")\n","print(f\"Average random policy episode return: {random_returns.mean():.3f}\")"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Average manual policy episode return: -731.538\n","Average random policy episode return: -147.556\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 720x576 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"KwtjJq6nHTfz"},"source":["## Free Play\n","If you want to try to write a better policy here's the whole code in one place."]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"e35eb771-6c83-4e65-9afc-d76540c406a6","executionInfo":{"status":"ok","timestamp":1574425713720,"user_tz":-60,"elapsed":16040,"user":{"displayName":"Maciej Wo≈Çczyk","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mDRvtTbpF1Xk8VA7v_ZmpKuSTv_gP3uBvdiPfNy=s64","userId":"03061857490200756616"}},"id":"dUSV3iQ4HTf0","colab":{"base_uri":"https://localhost:8080/","height":522}},"source":["class ManualPolicy:\n","\n","  def sample(self, obs: np.ndarray):\n","      \"\"\"Pick an action based on the current state\"\"\"\n","\n","      # your code here\n","      action = 0\n","      \n","      return action\n","\n","# moon lander\n","env = gym.make(\"LunarLander-v2\")\n","\n","# random policy\n","policy = RandomPolicy(action_dim=env.action_space.n)\n","# your policy\n","policy = ManualPolicy()\n","\n","# gather trajectories\n","manual_history = gather_trajectories(env, manual_policy)\n","random_history = gather_trajectories(env, random_policy)\n","\n","# process trajectories\n","manual_stats = process_trajectories(manual_history)\n","random_stats = process_trajectories(random_history)\n","\n","# get episode returns\n","manual_returns = manual_stats[-1]\n","random_returns = random_stats[-1]\n","\n","# visualize\n","plt.boxplot([manual_returns.numpy(), random_returns.numpy()], labels=['manual', 'random'], sym=\"\")\n","\n","print(f\"Average manual policy episode return: {manual_returns.mean():.3f}\")\n","print(f\"Average random policy episode return: {random_returns.mean():.3f}\")\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Average manual policy episode return: -965.175\n","Average random policy episode return: -178.926\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 720x576 with 1 Axes>"]},"metadata":{"tags":[]}}]}]}